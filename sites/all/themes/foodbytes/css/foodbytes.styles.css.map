{"version":3,"sources":["variables/_graphics.scss","abstractions/_arrow.scss","abstractions/_hlist.scss","abstractions/_island.scss","base/_chapters.scss","base/_typography.scss","base/_forms.scss","../node_modules/compass-mixins/lib/compass/css3/_shared.scss","variables/_grid.scss","variables/_colors.scss","abstractions/_typography.scss","base/_media.scss","base/_navigation.scss","base/_off-canvas.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","../node_modules/compass-mixins/lib/compass/css3/_opacity.scss","base/_tables.scss","../node_modules/compass-mixins/lib/compass/typography/_vertical_rhythm.scss","variables/_typography.scss","../node_modules/compass-mixins/lib/compass/typography/links/_link-colors.scss","base/_views.scss","foodbytes.styles.scss","../node_modules/singularitygs/stylesheets/singularitygs/_api.scss","../node_modules/singularitygs/stylesheets/singularitygs/math/_columns.scss","../node_modules/singularitygs/stylesheets/singularitygs/helpers/_directions.scss","../node_modules/singularitygs/stylesheets/singularitygs/api/_isolation.scss"],"names":[],"mappings":"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","file":"foodbytes.styles.css","sourcesContent":["/* SASS Document */\n/* Header graphics for homepage and chapters */\n\n$homegraphic: 'url(../../images/homegraphichead.jpg)' no-repeat center top;\n","/**\n * $ARROW\n */\n@mixin arrow($position, $size, $color, $border-size: 0, $border-color: transparent) {\n  // Box we're adding the arrow to.\n  position: relative;\n  background: $color;\n  @if $border-size != 0 {\n    border: $border-size solid $border-color;\n  }\n\n  // Swap the position around to the position we actually need.\n  $center-position: left;\n  @if $position == top {\n    $position: bottom;\n  } @else if $position == right  {\n    $position: left;\n    $center-position: top;\n  } @else if $position == bottom  {\n    $position: top;\n  } @else if $position == left  {\n    $position: right;\n    $center-position: top;\n  }\n\n  // Main arrow and border arrow.\n  @if $border-size == 0 {\n    &:after, &:before {\n      #{$position}: 100%;\n      border: solid transparent;\n      content: \" \";\n      height: 0;\n      width: 0;\n      position: absolute;\n      pointer-events: none;\n    }\n  } @else {\n    &:after, &:before {\n      #{$position}: 100%;\n      border: solid transparent;\n      content: \" \";\n      height: 0;\n      width: 0;\n      position: absolute;\n      pointer-events: none;\n    }\n  }\n\n  // Main Arrow\n  &:after {\n    border-color: transparent;\n    border-#{$position}-color: $color;\n    border-width: $size;\n    #{$center-position}: 50%;\n    margin-left: -$size;\n  }\n\n  // Border arrow.\n  @if $border-size != 0 {\n    &:before {\n      border-color: transparent;\n      border-#{$position}-color: $border-color;\n      border-width: $size + round(($border-size * 1.41421356));\n      #{$center-position}: 50%;\n      margin-left: -(round(($size + ($border-size * 1.41421356))));\n    }\n  }\n}\n","/**\n * $HLIST\n */\n%hlist {\n  @include horizontal-list(false);\n}\n","/**\n * $ISLAND\n */\n%island,\n%islet {\n  display: block;\n  @include margin-trailer(1);\n  @include clearfix();\n\n  & > :last-child,\n  & > :last-child {\n    margin-bottom: 0;\n  }\n}\n\n%island {\n  padding: $vert-spacing-unit $horz-spacing-unit;\n}\n\n%islet {\n  margin-bottom: $vert-spacing-unit / 2;\n  padding: ($vert-spacing-unit / 2) ($horz-spacing-unit / 2);\n}\n","/* CSS Document */\n\n","/**\n * $FONT-FACE\n */\n\n\n@import url(\"http://fast.fonts.net/t/1.css?apiType=css&projectid=7123b552-531a-44c2-ad29-70084cdb8542\");\n@font-face{\nfont-family:\"Avenir Next LT W04 Bold\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/6ff8ab07-ccb4-4a91-8f0f-2bd4367902e8.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/6ff8ab07-ccb4-4a91-8f0f-2bd4367902e8.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/91799b0e-0ef8-446e-b274-5509412e1242.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/97fb5311-bdbd-46bc-bf69-3bcf8c744cda.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/88093bd3-b377-4278-8abe-8460dd24d0e8.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/0fde1539-69df-4e3d-83ef-ae23d10dd2a5.svg#0fde1539-69df-4e3d-83ef-ae23d10dd2a5\") format(\"svg\");\n}\n@font-face{\nfont-family:\"Avenir Next LT W02SC Bold It\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/a0ceccda-d623-4b77-8cd9-44fa79e46810.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/a0ceccda-d623-4b77-8cd9-44fa79e46810.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/44d48253-4873-4edb-a1df-9921af5f19e9.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/6e7bfa31-af1c-4fbe-bd78-ba0e8314a183.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/fd64ca0a-7664-4337-8793-8b1c73506ebf.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/6d75d4b0-a48c-4544-9584-52d2fcdfe34b.svg#6d75d4b0-a48c-4544-9584-52d2fcdfe34b\") format(\"svg\");\n}\n@font-face{\nfont-family:\"Avenir Next W01 Thin\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/42c793cf-df5a-4e07-bf3e-37de54df02b6.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/42c793cf-df5a-4e07-bf3e-37de54df02b6.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/64779e28-a3b8-4364-949c-771372a0a327.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/c6c8e4be-17eb-4475-bbfc-bb485ffde766.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/87a872d0-5af3-4231-a77c-37f41ec74662.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/91464696-717b-4eaa-adbd-0dfc5e5fd782.svg#91464696-717b-4eaa-adbd-0dfc5e5fd782\") format(\"svg\");\n}\n@font-face{\nfont-family:\"AvenirNextW01-ThinItali\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/41537dd7-434f-4f85-b9d9-a88b160bc18d.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/41537dd7-434f-4f85-b9d9-a88b160bc18d.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/ec2dd1bd-4391-4b89-bf85-1a2346ea4342.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/fcf6f211-efa2-40f6-9c6b-e0ca63b6ea60.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/60fcc194-9529-4b99-9506-cdb26642656a.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/c110f1ef-6fdf-4008-bc75-b370649384a3.svg#c110f1ef-6fdf-4008-bc75-b370649384a3\") format(\"svg\");\n}\n@font-face{\nfont-family:\"AvenirNextLTW01-Regular\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/e9167238-3b3f-4813-a04a-a384394eed42.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/e9167238-3b3f-4813-a04a-a384394eed42.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/2cd55546-ec00-4af9-aeca-4a3cd186da53.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/1e9892c0-6927-4412-9874-1b82801ba47a.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/46cf1067-688d-4aab-b0f7-bd942af6efd8.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/52a192b1-bea5-4b48-879f-107f009b666f.svg#52a192b1-bea5-4b48-879f-107f009b666f\") format(\"svg\");\n}\n@font-face{\nfont-family:\"AvenirNextLTW01-Italic\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/d1fddef1-d940-4904-8f6c-17e809462301.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/d1fddef1-d940-4904-8f6c-17e809462301.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/7377dbe6-f11a-4a05-b33c-bc8ce1f60f84.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/92b66dbd-4201-4ac2-a605-4d4ffc8705cc.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/18839597-afa8-4f0b-9abb-4a30262d0da8.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/1de7e6f4-9d4d-47e7-ab23-7d5cf10ab585.svg#1de7e6f4-9d4d-47e7-ab23-7d5cf10ab585\") format(\"svg\");\n}\n@font-face{\nfont-family:\"AvenirNextLTW01-Medium\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/1a7c9181-cd24-4943-a9d9-d033189524e0.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/1a7c9181-cd24-4943-a9d9-d033189524e0.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/627fbb5a-3bae-4cd9-b617-2f923e29d55e.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/f26faddb-86cc-4477-a253-1e1287684336.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/63a74598-733c-4d0c-bd91-b01bffcd6e69.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/a89d6ad1-a04f-4a8f-b140-e55478dbea80.svg#a89d6ad1-a04f-4a8f-b140-e55478dbea80\") format(\"svg\");\n}\n@font-face{\nfont-family:\"AvenirNextLTW01-MediumI_721278\";\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/77a9cdce-ea6a-4f94-95df-e6a54555545e.eot?#iefix\");\nsrc:url(\"/sites/all/themes/foodbytes/Fonts/77a9cdce-ea6a-4f94-95df-e6a54555545e.eot?#iefix\") format(\"eot\"),url(\"/sites/all/themes/foodbytes/Fonts/3f380a53-50ea-4a62-95c5-d5d8dba03ab8.woff2\") format(\"woff2\"),url(\"/sites/all/themes/foodbytes/Fonts/8344e877-560d-44d4-82eb-9822766676f9.woff\") format(\"woff\"),url(\"/sites/all/themes/foodbytes/Fonts/b28b01d9-78c5-46c6-a30d-9a62c8f407c5.ttf\") format(\"truetype\"),url(\"/sites/all/themes/foodbytes/Fonts/ed4d3c45-af64-4992-974b-c37cd12a9570.svg#ed4d3c45-af64-4992-974b-c37cd12a9570\") format(\"svg\");\n}\n\n\n\n@include establish-baseline($base-font-size);\n\n/**\n * $BASE-TYPOGRAPHY\n */\nhtml, body {\nfont-family:\"AvenirNextLTW01-Regular\";\n  color: $green100;\n}\n\n/**\n * $LINKS\n */\na {\n  @include link-colors($red80, $red100, $red50, $red80, $red100);\n  text-decoration:none;\n}\n\nstrong {font-family:\"Avenir Next LT W04 Bold\";}\nstrong em, em strong {font-family:\"Avenir Next LT W02SC Bold It\";}\nem {font-family:\"AvenirNextLTW01-Italic\";}\n\n.node--colorbox h2 {\n\tmargin-bottom:2em;\n}\n\n.node--colorbox a {\n\tcolor:$red100;\n\tfont-family:\"Avenir Next LT W04 Bold\";\n\t}\n\t\n.node--colorbox li {\n\tlist-style:outside;\n\tlist-style-type:circle\n\t}\t\n/**\n * $HEADINGS\n */\nh1, .alpha,\nh2, .beta,\nh3, .gamma,\nh4, .delta,\nh5, .epsilon,\nh6, .zeta {\n  @include rhythm(0, 0, 0, 0.2);\n  color: $green50;\nfont-family:\"AvenirNextLTW01-Regular\";\n  text-transform:none;\n}\n\n  a,\n  a:visited {\n    color: inherit;\n    text-decoration: none;\n  }\n  a:hover {\n    color: $red80;\n  }\n\nh1, .alpha {\n  @include font-size(25px);\n}\nh2, .beta {\n  @include font-size(34px);\n}\nh3, .gamma {\n  @include font-size(21px);\n}\nh4, .delta {\n  @include font-size(18px);\n}\nh5, .epsilon{\n  @include font-size(16px);\n}\nh6, .zeta {\n  @include font-size(16px);\n}\n\n/**\n * $PARAGRAPHS\n */\np,\n%p {\n  margin: 0;\n  @include rhythm(0, 0, 0, 1);\n}\np + img {\n  float: left;\n  margin-right: $horz-spacing-unit;\n}\n\n/**\n * $QUOTES\n */\nblockquote {\n  @extend %p;\n  @include rhythm(0, 1, 1, 1);\n  padding: 0 1.5em;\n\n  @include rhythm-borders(1px);\n  @include apply-side-rhythm-border(left, 10px);\n  font-style: italic;\n\n  p {\n    margin: 0;\n  }\n}\n\nq {\n  font-style: italic;\n}\n\n/**\n * $MARKS\n */\nmark,\n.marker {\n  padding: 0.1em 0.5em;\n\n\n  color: #fff;\n  @include font-size(12px);\n  text-transform: capitalize;\n\n  @include border-radius(10px);\n}\n","select,\ninput,\ntextarea {\n  &:focus {\n    @include box-shadow(0 0 4px 1px rgba(lighten($red80, 15%), 0.3));\n    outline: 1px solid lighten($red80, 15%);\n  }\n}\n\nfieldset {\n  margin-left: 0;\n  margin-right: 0;\n  padding: ($vert-spacing-unit / 2) $horz-spacing-unit $vert-spacing-unit $horz-spacing-unit;\n\n  border-color: $light-grey;\n}\n\nlegend {\n  @include font-size(18px);\n  padding: 0 0.8em;\n  color: $mid-grey;\n}\n\n.page-node-edit #overlay textarea.form-textarea {\n\tmin-height:500px;\n}","@import \"../support\";\n\n// This mixin provides basic support for CSS3 properties and\n// their corresponding experimental CSS2 properties when\n// the implementations are identical except for the property\n// prefix.\n@mixin experimental($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { -webkit-#{$property} : $value; }\n  @if $khtml   and $experimental-support-for-khtml     {  -khtml-#{$property} : $value; }\n  @if $moz     and $experimental-support-for-mozilla   {    -moz-#{$property} : $value; }\n  @if $ms      and $experimental-support-for-microsoft {     -ms-#{$property} : $value; }\n  @if $o       and $experimental-support-for-opera     {      -o-#{$property} : $value; }\n  @if $official                                        {         #{$property} : $value; }\n}\n\n// Same as experimental(), but for cases when the property is the same and the value is vendorized\n@mixin experimental-value($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { #{$property} : -webkit-#{$value}; }\n  @if $khtml   and $experimental-support-for-khtml     { #{$property} :  -khtml-#{$value}; }\n  @if $moz     and $experimental-support-for-mozilla   { #{$property} :    -moz-#{$value}; }\n  @if $ms      and $experimental-support-for-microsoft { #{$property} :     -ms-#{$value}; }\n  @if $o       and $experimental-support-for-opera     { #{$property} :      -o-#{$value}; }\n  @if $official                                        { #{$property} :         #{$value}; }\n}\n","// Set consistent vertical and horizontal spacing units.\n$vert-spacing-unit: 18px;\n$horz-spacing-unit: 1em;\n\n$tab: 44em;\n$desk: 70em;\n\n$grids: 12;\n$gutters: 1/3;\n\n\n.l-content {\n}","$green10: #e6ece5;\n$green25: #d6e7e1;\n$green40: #a4cabd;\n$green50: #67af9b;\n$green80: #3c6259;\n$green100: #182923;\n\n$red20:#f3dfd5;\n$red50:#e1b49e;\n$red80:#c56949;\n$red100:#b12f18;\n\n\n$light-grey: #ccc;\n$mid-grey:#aaa;\n$dark-grey:#555;\n\n","// Use REMs with a pixel fallback for font sizing.\n@mixin font-size($font-size){\n  font-size: $font-size;\n  font-size: ($font-size / $base-font-size)*1rem;\n}\n\n","img, media {\n  max-width: 100%;\n  height: auto;\n  vertical-align: top;\n}\n","/* CSS Document */\n\n.l-region--navigation {\n\tpadding:80px 10px 10px 10px ;\n\t\n\t}\n\n.l-region--navigation h2 {\n\tmargin:0 0 20px 30px;\n}\n\n.l-region--navigation .sf-vertical {\n\twidth:55%;\n\tfloat:left;\t\n} \n\n.l-region--navigation .sf-vertical li  {\n\twidth:100%;\n\tfloat:none;\n}\n\n\n\n.l-region--navigation .sf-vertical li a {\n\tdisplay:block;\n\tpadding:10px 35px 10px 60px;\n\ttext-indent:-30px;\n\twidth:75%;\n\tcolor:white;\n\n}\n\n.l-region--navigation .sf-vertical li > ul {\n\tpadding:5px;\n\tbackground:$green80;\n\tborder:1px solid #ffffff;\n\twidth:55% !important;\n\tfloat:left;\n\tmargin-left:60%;\n}\n\n.l-region--navigation .sf-vertical li > ul li:first-child {\n\tdisplay:none;\n}\n\n\n.l-region--navigation .sf-vertical li > ul li a {\n\tpadding:5px 0 7px 40px;\n\twidth:100%;\n\tline-height:1.1em;\n}\n\n\n.l-region--navigation .sf-vertical li#menu-528-1 > ul,\n.l-region--navigation .sf-vertical li#menu-532-1 > ul,\n.l-region--navigation .sf-vertical li#menu-534-1 > ul,\n.l-region--navigation .sf-vertical li#menu-536-1 > ul,\n.l-region--navigation .sf-vertical li#menu-538-1 > ul {\n\tbottom:0;\n\twidth:55% !important;\n}\n\n\n.l-region--navigation .sf-vertical li#menu-538-1 > ul { /* chapter 10 */\n\ttop:-245px;\n}\n\n.l-region--navigation .sf-vertical li#menu-536-1 > ul { /* chapter 9 */\n\ttop:-335px;\n}\n.l-region--navigation .sf-vertical li#menu-534-1 > ul {/* chapter 8 */\n\ttop:-295px;\n}\n.l-region--navigation .sf-vertical li#menu-532-1 > ul {/* chapter 7 */\n\ttop:-355px;\n}\n.l-region--navigation .sf-vertical li#menu-528-1 > ul {/* chapter 6 */\n\ttop:-270px;\n}\n\n\n\n.l-region--navigation .sf-menu ul li {\n\twidth:80%;\n}\n\n.l-region--navigation ul li  ul.menu,\n.l-region--navigation ul li  ul.menu li.leaf {\n\tlist-style-type:none;\n\tlist-style-image:none;\t \n\t}\n\n\n\n.l-region--navigation ul li a:hover  {\n\tcolor:$red80;\n}\n\n","/*******************************************************************************\n * Off canvas portion of styling for the Off Canvas layout.\n ******************************************************************************/\n\n#off-canvas {\n\twidth:90%;\n\tbackground:$green100;\n\theight:100%;\n\tposition:absolute;\n\ttop:0;\n\tleft:-90%;\n\tz-index:10000;\n\ttransition:left 300ms; \n}\n\n\n\t\t\t\t\t@include breakpoint($tab) {\n\t\t\t\t\t#off-canvas {\n\t\t\t\t\t\twidth:60%;\n\t\t\t\t\t\tleft:-60%;\n\t\t\t\t\t}\n\t\t\t\t\t}\n \n\n\n.l-header #off-canvas.is-visible  {\n\tbackground:$green100;\n\theight:100%;\n\tposition:fixed;\n\ttop:0;\n\tleft:0;\n\ttransition:left 300ms;\n\t}\n\t\n\t\n\n\n.l-header #off-canvas.is-visible #off-canvas-show  {\n\tdisplay:none;\n\t@include opacity(0);\n\ttransition:  opacity 3s;\n}\n.l-header #off-canvas #off-canvas-show:before  {\n\tcontent: \" + \";\n\tcolot:#fff;\n}\n\n\n.l-header #off-canvas #off-canvas-show  {\n\tdisplay:block;\n\tposition:fixed;\n\tleft:0;\n\ttop:120px;\n\ttransition:  left 300ms;\n\ttransition:  opacity 1200ms;\n\ttext-indent:-5000px;\n\tbackground:$green50 url(/sites/all/themes/foodbytes/images/menu.png) no-repeat;\n\twidth:100px;\n\theight:60px;\n\t@include opacity(1);\n\tborder:1px white solid;\n\tborder-left:none;\n}\n\n.l-header #off-canvas #off-canvas-show:hover  { \nbackground-color:$green80;\n}\n\n.l-header #off-canvas #off-canvas-hide  {\n\tdisplay:none;\n\t@include opacity(0);\n\ttransition: opacity 3s;\n}\n.l-header #off-canvas.is-visible #off-canvas-hide  {\n\tdisplay:block;\n\tposition:absolute;\n\ttop:47px;\n\tright:0;\n\tmargin:0;\n\tdisplay:block;\n\ttransition:  left 300ms;\n\ttext-indent:-5000px;\n\tbackground:$green50 url(/sites/all/themes/foodbytes/images/menuclose.png) no-repeat;\n\twidth:100px;\n\theight:60px;\n\t@include opacity(1);\n\tborder:1px white solid;\n\tborder-right:none;\n}\n.l-header #off-canvas #off-canvas-hide:hover  { \nbackground-color:$green80;\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","@import \"shared\";\n\n// Provides cross-browser CSS opacity. Takes a number between 0 and 1 as the argument, e.g. 0.5 for 50% opacity.\n//\n//     @param $opacity\n//         A number between 0 and 1, where 0 is transparent and 1 is opaque.\n\n@mixin opacity($opacity) {\n  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8 {\n    filter: unquote(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})\");\n  }\n  opacity: $opacity;\n}\n\n// Make an element completely transparent.\n@mixin transparent { @include opacity(0); }\n\n// Make an element completely opaque.\n@mixin opaque { @include opacity(1); }\n","/**\n * $TABLES\n */\ntable {\n  width: 100%;\n  margin-bottom: $vert-spacing-unit;\n}\n\nth {\n  padding: 0.5em 1em;\n  color: #fff;\n\n  a,\n  a.active {\n    color: #fff;\n\n    img {\n      margin: 2px 3px;\n    }\n  }\n}\ntd {\n  padding: 0.5em 1em;\n}\n\ntr.odd {\n}\ntr.even {\n}\n\ncaption {\n  @extend .delta;\n}\n","@import \"../layout/grid-background\";\n\n// The base font size.\n$base-font-size: 16px !default;\n\n// The base line height determines the basic unit of vertical rhythm.\n$base-line-height: 24px !default;\n\n// Set the default border style for rhythm borders.\n$default-rhythm-border-style: solid !default;\n\n// The default font size in all browsers.\n$browser-default-font-size: 16px;\n\n// Set to false if you want to use absolute pixels in sizing your typography.\n$relative-font-sizing: true !default;\n\n// Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function\n// to round the line height to the nearest half line height instead of the\n// nearest integral line height to avoid large spacing between lines.\n$round-to-nearest-half-line: false !default;\n\n// Ensure there is at least this many pixels\n// of vertical padding above and below the text.\n$min-line-padding: 2px !default;\n\n// $base-font-size but in your output unit of choice.\n// Defaults to 1em when `$relative-font-sizing` is true.\n$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n\n// The basic unit of font rhythm.\n$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n\n// The leader is the amount of whitespace in a line.\n// It might be useful in your calculations.\n$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n\n// The half-leader is the amount of whitespace above and below a line.\n// It might be useful in your calculations.\n$base-half-leader: $base-leader / 2;\n\n// True if a number has a relative unit.\n@function relative-unit($number) {\n  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n}\n\n// True if a number has an absolute unit.\n@function absolute-unit($number) {\n  @return not(relative-unit($number) or unitless($number));\n}\n\n@if $relative-font-sizing and not(relative-unit($font-unit)) {\n  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n}\n\n// Establishes a font baseline for the given font-size.\n@mixin establish-baseline($font-size: $base-font-size) {\n  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n  // whose root is set in ems. So we set the root font size in percentages of\n  // the default font size.\n  * html {\n    font-size: 100% * ($font-size / $browser-default-font-size);\n  }\n  html {\n    font-size: $font-size;\n    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));\n  }\n}\n\n// Resets the line-height to 1 vertical rhythm unit.\n// Does not work on elements whose font-size is different from $base-font-size.\n//\n// @deprecated This mixin will be removed in the next release.\n// Please use the `adjust-leading-to` mixin instead.\n@mixin reset-baseline {\n  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));\n}\n\n// Show a background image that can be used to debug your alignments.\n// Include the $img argument if you would rather use your own image than the\n// Compass default gradient image.\n@mixin debug-vertical-alignment($img: false) {\n  @if $img {\n    background: image-url($img);\n  } @else {\n    @include baseline-grid-background($base-rhythm-unit);\n  }\n}\n\n// Adjust a block to have a different font size and line height to maintain the\n// rhythm. $lines specifies how many multiples of the baseline rhythm each line\n// of this font should use up. It does not have to be an integer, but it\n// defaults to the smallest integer that is large enough to fit the font.\n// Use $from-size to adjust from a font-size other than the base font-size.\n@mixin adjust-font-size-to($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size) {\n  @if not($relative-font-sizing) and $from-size != $base-font-size {\n    @warn \"$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to\";\n  }\n  font-size: $font-unit * $to-size / $from-size;\n  @include adjust-leading-to($lines, if($relative-font-sizing, $to-size, $base-font-size));\n}\n\n// Adjust a block to have different line height to maintain the rhythm.\n// $lines specifies how many multiples of the baseline rhythm each line of this\n// font should use up. It does not have to be an integer, but it defaults to the\n// smallest integer that is large enough to fit the font.\n@mixin adjust-leading-to($lines, $font-size: $base-font-size) {\n  line-height: rhythm($lines, $font-size);\n}\n\n// Calculate rhythm units.\n@function rhythm(\n  $lines: 1,\n  $font-size: $base-font-size,\n  $offset: 0\n) {\n  @if not($relative-font-sizing) and $font-size != $base-font-size {\n    @warn \"$relative-font-sizing is false but a relative font size was passed to the rhythm function\";\n  }\n  $rhythm: $font-unit * ($lines * $base-line-height - $offset) / $font-size;\n  // Round the pixels down to nearest integer.\n  @if unit($rhythm) == px {\n    $rhythm: floor($rhythm);\n  }\n  @return $rhythm;\n}\n\n// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n@function lines-for-font-size($font-size) {\n  $lines: if($round-to-nearest-half-line,\n              ceil(2 * $font-size / $base-line-height) / 2,\n              ceil($font-size / $base-line-height));\n  @if $lines * $base-line-height - $font-size < $min-line-padding * 2 {\n    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n  }\n  @return $lines;\n}\n\n// Apply leading whitespace. The $property can be margin or padding.\n@mixin leader($lines: 1, $font-size: $base-font-size, $property: margin) {\n  #{$property}-top: rhythm($lines, $font-size);\n}\n\n// Apply leading whitespace as padding.\n@mixin padding-leader($lines: 1, $font-size: $base-font-size) {\n  padding-top: rhythm($lines, $font-size);\n}\n\n// Apply leading whitespace as margin.\n@mixin margin-leader($lines: 1, $font-size: $base-font-size) {\n  margin-top: rhythm($lines, $font-size);\n}\n\n// Apply trailing whitespace. The $property can be margin or padding.\n@mixin trailer($lines: 1, $font-size: $base-font-size, $property: margin) {\n  #{$property}-bottom: rhythm($lines, $font-size);\n}\n\n// Apply trailing whitespace as padding.\n@mixin padding-trailer($lines: 1, $font-size: $base-font-size) {\n  padding-bottom: rhythm($lines, $font-size);\n}\n\n// Apply trailing whitespace as margin.\n@mixin margin-trailer($lines: 1, $font-size: $base-font-size) {\n  margin-bottom: rhythm($lines, $font-size);\n}\n\n// Shorthand mixin to apply whitespace for top and bottom margins and padding.\n@mixin rhythm($leader: 0, $padding-leader: 0, $padding-trailer: 0, $trailer: 0, $font-size: $base-font-size) {\n  @include leader($leader, $font-size);\n  @include padding-leader($padding-leader, $font-size);\n  @include padding-trailer($padding-trailer, $font-size);\n  @include trailer($trailer, $font-size);\n}\n\n// Apply a border and whitespace to any side without destroying the vertical\n// rhythm. The whitespace must be greater than the width of the border.\n@mixin apply-side-rhythm-border($side, $width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {\n  @if not($relative-font-sizing) and $font-size != $base-font-size {\n    @warn \"$relative-font-sizing is false but a relative font size was passed to apply-side-rhythm-border\";\n  }\n  border-#{$side}-style: $border-style;\n  border-#{$side}-width: $font-unit * $width / $font-size;\n  padding-#{$side}: rhythm($lines, $font-size, $offset: $width);\n}\n\n// Apply borders and whitespace equally to all sides.\n@mixin rhythm-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {\n  @if not($relative-font-sizing) and $font-size != $base-font-size {\n    @warn \"$relative-font-sizing is false but a relative font size was passed to rhythm-borders\";\n  }\n  border: {\n    style: $border-style;\n    width: $font-unit * $width / $font-size;\n  };\n  padding: rhythm($lines, $font-size, $offset: $width);\n}\n\n// Apply a leading border.\n@mixin leading-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {\n  @include apply-side-rhythm-border(top, $width, $lines, $font-size, $border-style);\n}\n\n// Apply a trailing border.\n@mixin trailing-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {\n  @include apply-side-rhythm-border(bottom, $width, $lines, $font-size, $border-style);\n}\n\n// Apply both leading and trailing borders.\n@mixin horizontal-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {\n  @include leading-border($width, $lines, $font-size, $border-style);\n  @include trailing-border($width, $lines, $font-size, $border-style);\n}\n\n// Alias for `horizontal-borders` mixin.\n@mixin h-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {\n  @include horizontal-borders($width, $lines, $font-size, $border-style);\n}\n","$pt-sans    : 'PT Sans', Helvetica, Arial, sans-serif;\n$maven-pro  : 'Maven Pro', Helvetica, Arial, sans-serif;\n\n$base-font-size: 14px;\n$base-line-height: 20px;\n\n\n\n","// Set all the colors for a link with one mixin call.\n// Order of arguments is:\n//\n// 1. normal\n// 2. hover\n// 3. active\n// 4. visited\n// 5. focus\n//\n// Those states not specified will inherit.\n// Mixin to an anchor link like so:\n//     a\n//       +link-colors(#00c, #0cc, #c0c, #ccc, #cc0)\n\n@mixin link-colors($normal, $hover: false, $active: false, $visited: false, $focus: false) {\n  color: $normal;\n  @if $visited {\n    &:visited {\n      color: $visited; } }\n  @if $focus {\n    &:focus {\n      color: $focus; } }\n  @if $hover {\n    &:hover {\n      color: $hover; } }\n  @if $active {\n    &:active {\n      color: $active; } } }\n","\n/* SIDEBAR CHAPTER MENU VIEW */\n\n.l-region--sidebar-second .views-field-title  {\n\t@include border-radius(5px);\n\tmargin-bottom:10px;\n  \tpadding:5px;\n\tbackground:$green25;\n  }\n  \n.l-region--sidebar-second .views-field-title a  {\n\tdisplay:block;\n\tpadding-left: 22px ;\n  \ttext-indent: -22px ;\n  }\n  \n","// Import variables, abstractions, base styles and components using globbing.\n//\n// Globbing will always import files alphabetically. Optimally, all your\n// components should be self-contained and explicit enough to not have any\n// contained styles leak into unrelated components: The import order should not\n// affect the result.\n//\n// If there are variables, functions or mixins that depend on each other and\n// therefore need to be imported in a specific order you can import them\n// directly. Variables-, function- or mixin providing partials should never\n// output any styles themselves: Importing them multiple times to resolve\n// dependencies shouldn't be a problem.\n\n//@import \"breakpoint-sass\";\n//@import \"compass-mixins\";\n//@import \"singularitygs\";\n\n\n@import \"compass\";\n@import \"breakpoint\";\n@import \"singularitygs\";\n@import \"../node_modules/compass-mixins/lib/_compass.scss\";\n\n@import \"variables/_colors.scss\";\n@import \"variables/_graphics.scss\";\n@import \"variables/_grid.scss\";\n@import \"variables/_legacy.scss\";\n@import \"variables/_typography.scss\";\n@import \"abstractions/_arrow.scss\";\n@import \"abstractions/_grid.scss\";\n@import \"abstractions/_hlist.scss\";\n@import \"abstractions/_island.scss\";\n@import \"abstractions/_typography.scss\";\n@import \"abstractions/_visibility.scss\";\n@import \"base/_chapters.scss\";\n@import \"base/_forms.scss\";\n@import \"base/_media.scss\";\n@import \"base/_navigation.scss\";\n@import \"base/_off-canvas.scss\";\n@import \"base/_tables.scss\";\n@import \"base/_typography.scss\";\n@import \"base/_views.scss\";\n \n\n\n\n\n /* GET DOWN! BY MATTHEW JAMES TAYLOR TO KEEP THE FOOTER AT THE FOOT EVEN ON A SHORT PAGE */\n \n\t\t\t\t\t\t\t html {\n\t\t\t\t\t\t\t\theight:100%;\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t body {\n\t\t\t\t\t\t\t\theight:100%;\n\t\t\t\t\t\t\t\tcolor:$green80;\n\t\t\t\t\t\t }\n\t\t\t\t\t\t\t .l-page {\n\t\t\t\t\t\t\t\tposition:relative;\n\t\t\t\t\t\t\t\tmin-height:100%;\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t .l-branding {\n\t\t\t\t\t\t\t\t \t@include grid-span(12,1);\n\t\t\t\t\t\t\t\t\tclear:both;\n\t\t\t\t\t\t\t\t\t background-color:rgba($green50, .85);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t .l-main {\n\t\t\t\t\t\t\t\t\tpadding-bottom:400px;\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t .l-footer {\n\t\t\t\t\t\t\t\t position:absolute;\n\t\t\t\t\t\t\t\t bottom:0;\n\t\t\t\t\t\t\t\t width:100%;\n\t\t\t\t\t\t\t\t height:400px;\n\t\t\t\t\t\t\t\t background-color:rgba($green80, .85);\n\t\t\t\t\t\t\t\t color:#fff;\n\t\t\t\t\t\t\t }\n \n \t\t\t\t\t\t\t\t\t .l-footer p {\n\t\t\t\t\t\t\t\t\t\tfont-family:\"AvenirNextLTW01-Regular\";\n\t\t\t\t\t\t\t\t\t\tpadding:20px 0 5px 20px;\n\t\t\t\t\t\t\t\t\t }\n\n.form-item label, .form-actions label {\n\tfont-weight:normal;\n\tpadding-bottom:5px;\n}\ntextarea {\n\tfont-family:\"AvenirNextLTW01-Regular\";\t\n\tfont-size:1rem;\n}\n.form-text {\n\tpadding:5px;\n\tfont-family:\"AvenirNextLTW01-Regular\";\t\n\twidth:95%;\n}\n\n.ctools-collapsible-container .ctools-toggle {\n\tbackground-position: 7px 14px;\n}\n\n\n.messages--status {\n\tbackground-color:$green10;\n\tborder:$green25;\n}\n /* SLOGAN */ \n \n \n .pane-page-slogan {\n\t padding:10px 0 0 0;\n\ttext-align:center;\n\tfont-size:1em;\n\tcolor:white; \n\tfont-family:\"Avenir Next W01 Thin\";\n}\n\n\t\t\t\t\t@include breakpoint($tab) {\n\t\t\t\t\t\t.pane-page-slogan {\n\t\t\t\t\t\t\tfont-size:1.9em;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t@include breakpoint($desk) {\n\t\t\t\t\t\t.pane-page-slogan {\n\t\t\t\t\t\t\tfont-size:2.5em;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n \n \n /* TOP MENU OF CONTRIBUTORS ETC */\n \n\n\n .pane-menu-menu-header-menu {\n \tfloat:left; \n\twidth:100%;\n\t padding:0;\n\t color:#fff;\n }\n \n  .pane-menu-menu-header-menu .menu {\n  \twidth:100%;\n  }\n\n   .pane-menu-menu-header-menu .menu .leaf { \n   list-style-type:none;\n\tlist-style-image:none;\n   }\n   \n   .pane-menu-menu-header-menu ul {\n   \tdisplay:block;\n\tfloat:left;\n\tmargin:0 auto;\n   }\n  .pane-menu-menu-header-menu ul li a  {\n\t  \t color:#fff;\n\t\t display:block;\n\t  padding:5px 0;\n }\n \n  .pane-menu-menu-header-menu ul li.first  {\n\t  margin-left:0;\n  }\n    .pane-menu-menu-header-menu ul li.last  {\n\t  margin-right:0;\n  }\n  .pane-menu-menu-header-menu ul li  {\n\t  float:left; \n\t  margin:1%;\n\t  text-align:center;\n\t width:98%;\n }\n\t\t\t\t\t\t @include breakpoint($tab) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t   .pane-menu-menu-header-menu ul li  {\n\t\t\t\t\t\t\t  float:left; \n\t\t\t\t\t\t\t  margin:0 1% 0 0;\n\t\t\t\t\t\t\t  text-align:center;\n\t\t\t\t\t\t\t width:31%;\n\t\t\t\t\t\t }\n\t\t\t\t\t\t\t .pane-menu-menu-header-menu ul li a  {\n\t\t\t\t\t\t\t\t  padding:10px 0;\n\t\t\t\t\t\t\t } \n\t\t\t\t\t\t }\n\t\t\t\t\t\t  @include breakpoint($desk) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t   .pane-menu-menu-header-menu ul li  {\n\t\t\t\t\t\t\t  float:left; \n\t\t\t\t\t\t\t  margin:0 1% 0 0;\n\t\t\t\t\t\t\t  text-align:center;\n\t\t\t\t\t\t\t width:13.2857143%;\n\t\t\t\t\t\t }\n\t\t\t\t\t\t\t .pane-menu-menu-header-menu ul li a  {\n\t\t\t\t\t\t\t\t  padding:20px 0;\n\t\t\t\t\t\t\t } \n}\n \n  .pane-menu-menu-header-menu ul li:hover  {\n\t background-color:rgba($green50, .85);\n }\n\n\n.l-content {\n\tpadding-top:50px;\n\t@include grid-span(12,1);\n}\n.l-region--sidebar-second {\n\t\t@include grid-span(12,1);\n\t}\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t@include breakpoint($tab) {\n\t\t\t\t\t\t\t.l-content {\n\t\t\t\t\t\t\t\tpadding-top:50px;\n\t\t\t\t\t\t\t\t@include grid-span(6,2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t.l-region--sidebar-second {\n\t\t\t\t\t\t\t\t\t@include grid-span(4,8);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t@include breakpoint($desk) {\n\t\t\t\t\t\t\t.l-content {\n\t\t\t\t\t\t\t\tpadding-top:50px;\n\t\t\t\t\t\t\t\t@include grid-span(6,3);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t.l-region--sidebar-second {\n\t\t\t\t\t\t\t\t\t@include grid-span(3,9);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\n.pane-page-logo {\n\ttext-align:center;\n}\n\n#logo img {\n\twidth:98%;\n\tmargin: 20px 0;\n} \n\n\t\t\t\t\t\t\t@include breakpoint($tab) {\n\t\t\t\t\t\t\t\t#logo {\n\t\t\t\t\t\t\t\t\twidth:70%;\n\t\t\t\t\t\t\t\t\tpadding-top:20px;\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t#logo img {\n\t\t\t\t\t\t\t\t\tmax-width:700px;\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t@include breakpoint($desk) {\n\t\t\t\t\t\t\t\t#logo {\n\t\t\t\t\t\t\t\t\twidth:80%;\n\t\t\t\t\t\t\t\t\tpadding-top:20px;\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t#logo img {\n\t\t\t\t\t\t\t\t\tmax-width:800px;\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t}\n\n\nh1,h2,h3,h4,h5,h6 {\n\ttext-transform:none;\n}\n\n.l-content p, .l-content li, .node--colorbox p, .node--colorbox li {\n\tfont-size:1.2em;\n\tline-height:1.3em;\n\tmargin-bottom: 20px;\n}  \n.l-content li ul li,  .node--colorbox li ul li  {\n\tfont-size:1em;\n}\n\n.page-node- .node--colorbox h2.node__title, .page-node- .node--colorbox h2 {\n\tcolor:$green50 !important;\n}\n\nsub {\n\tfont-size:0.8em;\n\tvertical-align:sub;\n}\n \n.l-content .pane-node-body {\n\tfloat:left;\n\tpadding:15px;\n\tpadding-top:2em;\n\t@include border-radius(5px);\n\tbackground:rgba(255,255,255,.750);\n}\n\n.l-region--sidebar-second {\n\tmargin-top:50px;\n\t@include border-radius(10px);\n\tbackground:$green10;\n}\n \n.pane-node-book-nav {\n\tposition:relative;\n\tpadding:10px;\n}\n\n\n.l-footer div.footerlogo {\n\twidth:48%;\n\tfloat:left;\n\tmargin:1%;\n\ttext-align:center;\n}\n\n.l-footer .pane-custom {\n\t@include grid-span(12,1)\n}\n.l-footer .pane-block-1 {\n\t@include grid-span(12,1)\n}\n\n\t\t\t\t@include breakpoint($tab) {\n\t\t.l-footer div.footerlogo {\n\t\t\twidth:31%;\n\t\t\tmargin:1%;\n\t\t}\n\t\t\t.l-footer .pane-custom {\n\t\t\t@include grid-span(8,1)\n\t\t}\n\t\t.l-footer .pane-block-1 {\n\t\t\t@include grid-span(4,9)\n\t\t}\n\n\t}\n\t\t@include breakpoint($desk) {\n.l-footer div.footerlogo {\n\twidth:11%;\n\tmargin:1%;\n}\n\t}\n\n.l-footer #mc_embed_signup {\n\tbackground-color: transparent;\n}\n\n.l-footer #mc_embed_signup h2 {\n\tfont-weight:normal;\n}\n\n\n","@import \"api/float\";\n@import \"api/isolation\";\n@import \"api/calc\";\n\n//////////////////////////////\n// Master Grid Span mixin\n//////////////////////////////\n@mixin grid-span($span, $location: 1, $grid: null, $gutter: null, $output-style: null, $gutter-style: null, $options: null) {\n\n  @if $output-style == null {\n    $output-style: sgs-get('output');\n  }\n\n  $Grid: find-grid($grid);\n  $Gutter: find-gutter($gutter);\n  $Style: find-gutter-style($gutter-style);\n\n  $Start-Row: start-row($location);\n  $End-Row: end-row($span, $location, $Grid);\n\n  $Fixed-Gutter: fixed-gutter($Grid, $Gutter, $Style);\n  $Split-Gutter: index($Style, 'split');\n  $Gutter-Property: gutter-property($Grid, $Gutter, $Style);\n\n  $Direction: sgs-get('direction');\n  $From: if($options and type-of($options) == 'map', if(map-get($options, 'from'), map-get($options, 'from'), $Direction), $Direction);\n  $From: if($From == 'ltr' or $From == 'rtl', named-direction($From), $From);\n\n  $Holder: ();\n  @each $k, $v in $options {\n    $Holder: if($k == 'from', $Holder, map-merge($Holder, ($k: $v)));\n  }\n  $options: if(length($Holder) > 0, $Holder, null);\n\n  $Span-Map: (\n    'span': $span,\n    'location': $location,\n    'grid': $Grid,\n    'gutter': $Gutter,\n    'style': $Style,\n    'start row': $Start-Row,\n    'end row': $End-Row,\n    'fixed gutter': $Fixed-Gutter,\n    'split gutter': $Split-Gutter,\n    'gutter property': $Gutter-Property,\n    'options': $options\n  );\n\n  @if sgs-get('debug') != false {\n    -sgs-span-settings: inspect($Span-Map);\n  }\n\n\n  @if function-exists('output-#{$output-style}') {\n    $Left: ();\n    $Right: ();\n\n    @if $Direction == 'both' or $From == 'left' or ($Direction == 'rtl' and $From == 'opposite') {\n      $Left: call('output-#{$output-style}', map-merge($Span-Map, ('direction': left)));\n    }\n\n    @if $Direction == 'both' or $From == 'right' or ($Direction == 'ltr' and $From == 'opposite') {\n      $Right: call('output-#{$output-style}', map-merge($Span-Map, ('direction': right)));\n    }\n\n    $Left-Keys: map-keys($Left);\n    $Right-Keys: map-keys($Right);\n    $Exclude: ();\n\n    @each $key in $Left-Keys {\n      @if index($Right-Keys, $key) {\n        @if map-get($Right, $key) == map-get($Left, $key) {\n          $Exclude: append($Exclude, $key);\n        }\n      }\n    }\n\n    // Always try and print the Left value\n    @include grid-span-build-exclude($Left, $Exclude, false);\n\n    // If Direction is Both or RTL, add the RTL attribute selector\n    @if $Direction == 'both' or $Direction == 'rtl' {\n      [dir=\"rtl\"] & {\n        @include grid-span-build-exclude($Right, $Exclude, true);\n      }\n    }\n    @else {\n      @include grid-span-build-exclude($Right, $Exclude, true);\n    }\n  }\n  @else {\n    @warn \"There doesn't appear to be an output style named `#{$output-style}`. Please ensure that the function `output-#{$output-style}` and that the output style `#{$output-style}` are both available before trying to use them.\";\n  }\n}\n\n@mixin grid-span-build($property, $value) {\n  @if type-of($value) != 'map' {\n    #{$property}: $value;\n  }\n  @else {\n    @each $prefix, $val in $value {\n      #{$property}: $val;\n    }\n  }\n}\n\n@mixin grid-span-build-exclude($properties, $delta, $exclude: false) {\n  @each $property, $value in $properties {\n    @if $exclude {\n      @if not index($delta, $property) {\n        @include grid-span-build($property, $value);\n      }\n    }\n    @else {\n      @include grid-span-build($property, $value);\n    }\n  }\n}","//////////////////////////////\n// Find width, in percentages, of the column span\n//////////////////////////////\n@function column-span($span, $location, $grid: null, $gutter: null, $gutter-style: null) {\n  // Find the grid and gutters\n  $grid: find-grid($grid);\n  $gutter: find-gutter($gutter);\n  $gutter-style: find-gutter-style($gutter-style);\n\n  @if fixed-gutter($grid, $gutter, $gutter-style) {\n    $gutter: 0;\n  }\n\n  // @debug $grid;\n  // @debug $gutter;\n\n  // Combine the grid and gutters\n  $grid-and-gutters: column-sum($grid, $gutter, $gutter-style);\n\n  // @debug $grid-and-gutters;\n\n  // Equal width grid are easy! Deal with them!\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    $span-and-gutters: $span + $gutter * ($span - 1);\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  // Asymmetric lists are harder, so we're going to treat them as their own grid\n  @else if type-of($grid) == 'list' or length($grid) > 1 {\n    $span-and-gutters: 0;\n\n    @if $location == 1 and $span >= 1 {\n      @for $i from 1 through $span {\n        $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n      }\n    }\n    @else {\n      $total: $location + $span - 1;\n      @if $total != 0 {\n        @for $i from $location through $total {\n          $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n        }\n      }\n    }\n    $span-and-gutters: $span-and-gutters - $gutter;\n\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  @else {\n    @warn \"Can't find a working set of grid! That's terrible!\";\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Find the total sum of the grid\n//////////////////////////////\n@function column-sum($grid, $gutter, $gutter-style) {\n  $split: if(index($gutter-style, 'split'), true, false);\n\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    @if $split {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1))) * nth($gutter, 1));\n    }\n    @else {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1)) - 1) * nth($gutter, 1));\n    }\n\n  }\n  @else if type-of($grid) == 'list' {\n    $sum: 0;\n    @each $column in $grid {\n      $sum: $sum + nth($column, 1);\n    }\n    @if $split {\n      $sum: $sum + (column-count($grid)) * nth($gutter, 1);\n    }\n    @else {\n      $sum: $sum + (column-count($grid) - 1) * nth($gutter, 1);\n    }\n    @return $sum;\n  }\n}\n\n//////////////////////////////\n// Find the number of grid\n//////////////////////////////\n@function column-count($grid) {\n  @if type-of($grid) == 'number' {\n    @return $grid;\n  }\n  @if type-of($grid) == 'list' {\n    @if length($grid) == 1 {\n      @return nth($grid, 1);\n    }\n    @else {\n      @return length($grid);\n    }\n  }\n}","//////////////////////////////\n// Find Opposite Direction\n//////////////////////////////\n@function opposite-direction($dir) {\n  @if $dir == 'left' {\n    @return right;\n  }\n  @else if  $dir == 'right' {\n    @return left;\n  }\n  @else if $dir == 'ltr' {\n    @return rtl;\n  }\n  @else if $dir == 'rtl' {\n    @return ltr;\n  }\n  @else if $dir == 'top' {\n    @return bottom;\n  }\n  @else if $dir == 'bottom' {\n    @return top;\n  }\n  @else {\n    @warn \"#{$dir} is not a direction! Make sure your direction is all lowercase!\";\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Find Direction Name\n//////////////////////////////\n@function named-direction($dir) {\n  @if $dir == 'ltr' {\n    @return left;\n  }\n  @else if $dir == 'rtl' {\n    @return right;\n  }\n  @else {\n    @warn \"#{$dir} is not a valid HTML direction! Make sure you are using a valid HTML direction\";\n    @return false;\n  }\n}","@function output-isolation($Span-Map) {\n  // Set up Left/Right maps\n  $Return: ();\n\n  $Span: map-get($Span-Map, 'span');\n  $Location: map-get($Span-Map, 'location');\n\n  $Grid: map-get($Span-Map, 'grid');\n  $Gutter: map-get($Span-Map, 'gutter');\n  $Style: map-get($Span-Map, 'style');\n\n  $Start-Row: map-get($Span-Map, 'start row');\n  $End-Row: map-get($Span-Map, 'end row');\n\n  $Fixed-Gutter: map-get($Span-Map, 'fixed gutter');\n  $Split-Gutter: map-get($Span-Map, 'split gutter');\n  $Gutter-Property: map-get($Span-Map, 'gutter property');\n\n  $Direction: map-get($Span-Map, 'direction');\n  $Options: map-get($Span-Map, 'options');\n\n  $Width: column-span($Span, $Location, $Grid, $Gutter, $Style);\n  $Margin-Span: column-span(($Location - 1), 1, $Grid, $Gutter, $Style);\n  $Gutter-Span: gutter-span($Gutter, $Grid);\n\n  // Backwards Compatibility for Options\n  @if type-of($Options) != 'map' and $Options != null {\n    $Options: ('clear': unquote(nth($Options, 1)));\n  }\n\n  $Dir: $Direction;\n  $Opp: opposite-direction($Dir);\n\n  $Return: map-merge($Return, ('width': $Width));\n\n  @if ($End-Row) {\n    $Return: map-merge($Return, ('float': $Opp));\n    $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n\n    @if $Split-Gutter and not $Fixed-Gutter {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      $Return: map-merge($Return, ('margin-#{$Opp}': 0));\n    }\n  }\n  @else {\n    $Return: map-merge($Return, ('float': $Dir));\n    $Return: map-merge($Return, ('margin-#{$Opp}': -100%));\n\n    @if $Start-Row {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n      }\n    }\n    @else {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span + $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span));\n      }\n    }\n  }\n  // If options are set, we merge them in!\n  @if ($Options) {\n    $Return: map-merge($Return, $Options);\n  }\n\n  // If CLear isn't already available, set it!\n  @if not map-has-key($Return, 'clear') {\n    $Return: map-merge($Return, ('clear': none));\n  }\n\n  // Left Fixed Gutters\n  @if $Fixed-Gutter {\n    @if index($Style, 'split') {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Dir}': $Gutter-Span / 2));\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      @if not $End-Row {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': 0));\n      }\n    }\n  }\n\n  @return $Return;\n}\n\n//////////////////////////////\n// Happy Syntax for Isolation\n//\n// Makes working with Isolation easier, as it moves Clear to a 1st class citizen of the mixin, and automatically builds the verbose grid-span mixin call\n//////////////////////////////\n@mixin isolation-span($Span, $Location, $clear: false, $grid: false, $gutter: false, $gutter-style: false, $from: false) {\n  $Options: ();\n  @if $clear {\n    $Options: map-merge($Options, ('clear': unquote($clear)));\n  }\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n\n  $Options: if(length($Options) > 0, $Options, null);\n  @include grid-span($Span, $Location, $grid, $gutter, 'isolation', $gutter-style, $Options);\n}\n\n//////////////////////////////\n// Happy Syntax of Asymmetric Grids\n//\n// Makes working with asymmetric grids easier!\n//////////////////////////////\n@mixin asymmetric-span($Location, $Span: false, $grid: false, $gutter: false, $gutter-style: false, $from: false, $output-style: false) {\n\n  $Span: if($Span != false, $Span, 1);\n  $output-style: if($output-style != false, $output-style, sgs-get('asymmetric output'));\n\n  $Options: ();\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n  $Options: if(length($Options) > 0, $Options, null);\n\n  @include grid-span($Span, $Location, $grid, $gutter, $output-style, $gutter-style, $Options);\n}"]}